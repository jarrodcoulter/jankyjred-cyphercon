package myEnc;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.security.Key;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
public class JavaEncryption {

	public static void main(String[] args) {
		String usage = "java -jar Untitled.jar inputfile outputfile";
		if (args.length < 2) {
			System.out.println(usage);
			System.exit(0);
		}
		String key = "gb packers rule!";
		File inputFile = new File(args[0]);
		File encryptedFile = new File(args[1]);
		encrypt(key,inputFile,encryptedFile);
	}
	public static void encrypt(String key, File inputFile, File outputFile) {
		try {
			Key secretKey = new SecretKeySpec(key.getBytes(), "AES");
			Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
			cipher.init(Cipher.ENCRYPT_MODE, secretKey);
			FileInputStream inputStream = new FileInputStream(inputFile);
			byte[] inputBytes = new byte[(int) inputFile.length()];
			inputStream.read(inputBytes);
			byte[] outputBytes = cipher.doFinal(inputBytes);
			FileOutputStream outputStream = new FileOutputStream(outputFile);
			outputStream.write(outputBytes);
			inputStream.close();
			outputStream.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
